[{"name":"app.R","content":"library(shiny)\nlibrary(MASS)\nlibrary(ggplot2)\nlibrary(shinythemes)\nlibrary(gridExtra)\nlibrary(plotly)\n\nui <- navbarPage(\"Bivariate CLT Visualizer\",\n  theme = shinytheme(\"flatly\"),\n  tabPanel(\"Main\",\n    withMathJax(\n    helpText(\"$$\n      \\\\text{If } X_1, X_2, \\\\dots, X_n \\\\text{ are independent observations from any population} \n      \\\\text{with mean } \\\\boldsymbol{\\\\mu} \\\\text{ and finite covariance } \\\\boldsymbol{\\\\Sigma}, \\\\\\\\\n      \\\\text{then } \\\\sqrt{n}(\\\\bar{X} - \\\\boldsymbol{\\\\mu}) \\\\text{ has an approximate }\n      N_p(\\\\mathbf{0}, \\\\boldsymbol{\\\\Sigma}) \\\\text{ distribution.}\n      $$\")\n    ),\n    fluidPage(\n      sidebarLayout(\n        sidebarPanel(\n          sliderInput(\"m\", \"Sample size (n):\", min = 2, max = 100, value = 2),\n          radioButtons(\"dist\", \"Original Data Distribution:\",\n                       choices = list(\n                         \"Bivariate Normal (μ=[0,0], ρ=0.5)\" = \"bvnorm_pos\",\n                         \"Bivariate Normal (μ=[2,1], ρ=-0.8)\" = \"bvnorm_neg\", \n                         \"Independent Standard Normal\" = \"indep_norm\",\n                         \"Bivariate Uniform ([0,1]×[0,1])\" = \"bv_unif\",\n                         \"Bivariate Poisson λ = (2, 2)\" = \"bv_pois\"\n                       ),\n                       selected = \"bvnorm_pos\"),\n          hr(),\n          h4(\"Theoretical Properties:\"),\n          verbatimTextOutput(\"theoretical\")\n        ),\n        mainPanel(\n          plotOutput(\"distPlot\", height = \"1000px\"),\n          fluidRow(\n            column(12,\n                   h4(\"Interpretation\"),\n                   textOutput(\"interpretation\")\n            )\n          ),\n          br(),\n          br(),\n          br()\n        )\n      )\n    )\n  ), \n  tabPanel(\"3D Density Surface\",\n    fluidPage(\n      mainPanel(\n        plotlyOutput(\"density3D\", height = \"600px\")\n      )\n    )\n  ),\n  footer = tags$footer(\n    style = \"\n      position: fixed;\n      bottom: 0;\n      left: 0;\n      width: 100%;\n      background-color: #f8f9fa;\n      border-top: 1px solid #ddd;\n      text-align: center;\n      padding: 8px;\n      font-size: 12px;\n      color: #6c757d;\n      z-index: 1000;\n    \",\n    \"2025 Created by Shahriar Shams and Issey Sone\"\n  )\n)\n\nserver <- function(input, output, session) {\n  \n  \n  generate_sample_means <- function() {\n    n_simulations <- 5000\n    \n    switch(input$dist,\n           \"bvnorm_pos\" = {\n             mu <- c(0, 0)\n             Sigma <- matrix(c(1, 0.5, 0.5, 1), nrow = 2)\n             t(replicate(n_simulations, colMeans(mvrnorm(input$m, mu, Sigma))))\n           },\n           \"bvnorm_neg\" = {\n             mu <- c(2, 1)\n             Sigma <- matrix(c(1, -0.8, -0.8, 1), nrow = 2)\n             t(replicate(n_simulations, colMeans(mvrnorm(input$m, mu, Sigma))))\n           },\n           \"indep_norm\" = {\n             mu <- c(0, 0)\n             Sigma <- diag(2)\n             t(replicate(n_simulations, colMeans(mvrnorm(input$m, mu, Sigma))))\n           },\n           \"bv_unif\" = {\n             t(replicate(n_simulations, colMeans(cbind(runif(input$m, 0, 1), runif(input$m, 0, 1)))))\n           },\n           \"bv_pois\" = {\n             t(replicate(n_simulations, colMeans(cbind(rpois(input$m, 2), rpois(input$m, 2)))))\n           })\n  }\n  \n  sample_means <- reactive({\n    generate_sample_means()\n  })\n  \n  output$distPlot <- renderPlot({\n    \n    df <- data.frame(X1 = sample_means()[,1], X2 = sample_means()[,2])\n    \n    \n    p1 <- ggplot(df, aes(x = X1, y = X2)) +\n      geom_point(alpha = 0.6, color = \"steelblue\") +\n      geom_density_2d(color = \"red\", alpha = 0.7) +\n      xlim(-4, 4) + \n      ylim(-4, 4) + \n      labs(title = paste(\"Sample Mean Vectors (n =\", input$m, \")\"),\n           x = \"Sample Mean of X₁\", \n           y = \"Sample Mean of X₂\") +\n      theme_minimal() +\n      theme(plot.title = element_text(hjust = 0.5))\n    \n    p2 <- ggplot(df, aes(x = X1)) +\n      geom_histogram(bins = 30, fill = \"lightcoral\", alpha = 0.7, color = \"white\") +\n      labs(title = \"Marginal: Sample Means of X₁\", x = \"Sample Mean of X₁\") +\n      theme_minimal() +\n      theme(plot.title = element_text(hjust = 0.5))\n    \n    \n    p3 <- ggplot(df, aes(x = X2)) +\n      geom_histogram(bins = 30, fill = \"lightgreen\", alpha = 0.7, color = \"white\") +\n      labs(title = \"Marginal: Sample Means of X₂\", x = \"Sample Mean of X₂\") +\n      theme_minimal() +\n      theme(plot.title = element_text(hjust = 0.5))\n    grid.arrange(p1, p2, p3, layout_matrix = rbind(c(1,1), c(2,3)))\n    \n    \n  })\n  \n  \n  output$theoretical <- renderText({\n    switch(input$dist,\n           \"bvnorm_pos\" = paste0(\"Population μ = [0, 0]\\n\",\n                                \"Population Σ = [[1, 0.5], [0.5, 1]]\\n\",\n                                \"CLT:̄ Xbar ~ N([0,0], Σ/\", input$m, \")\\n\",\n                                \"Expected correlation: 0.5\"),\n           \"bvnorm_neg\" = paste0(\"Population μ = [2, 1]\\n\",\n                                \"Population Σ = [[1, -0.3], [-0.3, 1]]\\n\", \n                                \"CLT: Xbar ~ N([2,1], Σ/\", input$m, \")\\n\",\n                                \"Expected correlation: -0.8\"),\n           \"indep_norm\" = paste0(\"Population μ = [0, 0]\\n\",\n                                \"Population Σ = [[1, 0], [0, 1]]\\n\",\n                                \"CLT:̄ Xbar ~ N([0,0], I/\", input$m, \")\\n\",\n                                \"Expected correlation: 0\"),\n           \"bv_unif\" = paste0(\"Population μ = [0.5, 0.5]\\n\",\n                             \"Population Σ = [[1/12, 0], [0, 1/12]]\\n\",\n                             \"CLT: Xbar ~ N([0.5,0.5], Σ/\", input$m, \")\\n\",\n                             \"Expected correlation: 0\"),\n           \"bv_pois\" = paste0(\"Population μ = [2, 2]\\n\",\n                              \"Population Σ = [[2, 0], [0, 2]]\\n\",\n                              \"CLT: Xbar ~ N([2, 2], Σ/\", input$m, \")\\n\",\n                              \"Expected correlation: 0\")\n           )\n  })\n  \n  output$density3D <- renderPlotly({\n  df <- as.data.frame(sample_means())\n  colnames(df) <- c(\"X1\", \"X2\")\n  \n  dens <- kde2d(df$X1, df$X2, n = 75)\n  \n  plot_ly() %>%\n    add_surface(x = ~dens$x, y = ~dens$y, z = ~dens$z,\n                showscale = TRUE,\n                opacity = 0.8,\n                colorscale = \"Viridis\") %>%\n    \n    add_markers(x = df$X1, y = df$X2, z = rep(0, nrow(df)),\n                marker = list(size = 2, color = 'black'),\n                name = \"Sample Means\") %>%\n    \n    layout(\n      title = paste(\"3D Density of Sample Means (n =\", input$m, \")\"),\n      scene = list(\n        xaxis = list(title = \"Mean X₁\"),\n        yaxis = list(title = \"Mean X₂\"),\n        zaxis = list(title = \"Density\"),\n        camera = list(eye = list(x = 1.2, y = 1.2, z = 0.8)) \n      )\n    )\n  })\n  \n  output$interpretation <- renderText({\n    \"Similar to the univariate Central Limit Theorem, as you increase the sample size the joint distribution will look like \n    a bivariate normal shape. The marginal distributions will also look like a normal distribution. In the '3D Density Surface Tab',\n    you can observe the 3D surface which is representative of the bivariate normal density.\"\n  })\n\n}\n\nshinyApp(ui, server)","type":"text"}]
